{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larms\\\\OneDrive\\\\Documents\\\\Skillcrush\\\\react\\\\project-sticky-notes\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      notes: [{\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }],\n      searchText: \"\"\n    };\n    this.addNote = () => {\n      const newNote = {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      };\n      const newNotes = [newNote, ...this.state.notes];\n      this.setState({\n        notes: newNotes\n      });\n\n      //  OR\n      //  this.setState({notes:[newNote, ...this.state.notes]})\n    };\n    this.removeNote = clickedNoteId => {\n      const filterCallBack = note => note.id !== clickedNoteId;\n      const updatedNotes = this.state.notes.filter(filterCallBack);\n      this.setState({\n        notes: updatedNotes\n      });\n    };\n    this.onType = (editMeId, updatedKey, updatedValue) => {\n      // editMeId==id of note that is edited\n      // updatedKey==title or description field\n      // updatedValue==value of title or description\n\n      const updatedNotes = this.state.notes.map(note => {\n        if (note.id !== editMeId) {\n          return note;\n        } else {\n          if (updatedKey === \"title\") {\n            note.title = updatedValue;\n            return note;\n          } else {\n            note.description = updatedValue;\n            return note;\n          }\n        }\n      });\n      this.setState({\n        notes: updatedNotes\n      });\n    };\n    this.onSearch = text => {\n      const textLowerCase = text.toLowerCase();\n      const updatedNotes = this.state.notes.map(note => {\n        if (!textLowerCase) {\n          note.doesMatchSearch = true;\n          return note;\n        } else {\n          const title = note.title.toLowerCase();\n          const description = note.description.toLowerCase();\n          const titleMatch = title.includes(textLowerCase);\n          const descriptionMatch = description.includes(textLowerCase);\n          const searchMatch = titleMatch || descriptionMatch;\n          note.doesMatchSearch = searchMatch;\n          return note;\n        }\n      });\n      this.setState({\n        notes: updatedNotes,\n        searchText: textLowerCase\n      });\n    };\n  }\n  componentDidUpdate() {\n    const savedNotesString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", savedNotesString);\n  }\n  componentDidMount() {\n    const savedNoteString = localStorage.getItem(\"savedNotes\");\n    if (savedNoteString) {\n      const savedNotes = JSON.parse(savedNoteString);\n      this.setState({\n        notes: savedNotes\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      onSearch: this.onSearch,\n      searchText: this.state.searchText,\n      addNote: this.addNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(NotesList, {\n      removeNote: this.removeNote,\n      onType: this.onType,\n      notes: this.state.notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Header","NotesList","App","constructor","arguments","state","notes","id","Date","now","title","description","doesMatchSearch","searchText","addNote","newNote","newNotes","setState","removeNote","clickedNoteId","filterCallBack","note","updatedNotes","filter","onType","editMeId","updatedKey","updatedValue","map","onSearch","text","textLowerCase","toLowerCase","titleMatch","includes","descriptionMatch","searchMatch","componentDidUpdate","savedNotesString","JSON","stringify","localStorage","setItem","componentDidMount","savedNoteString","getItem","savedNotes","parse","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/larms/OneDrive/Documents/Skillcrush/react/project-sticky-notes/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      },\n    ],\n    searchText: \"\",\n  };\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    };\n\n    const newNotes = [newNote, ...this.state.notes];\n\n    this.setState({ notes: newNotes });\n\n    //  OR\n    //  this.setState({notes:[newNote, ...this.state.notes]})\n  };\n\n  removeNote = (clickedNoteId) => {\n    const filterCallBack = (note) => note.id !== clickedNoteId;\n    const updatedNotes = this.state.notes.filter(filterCallBack);\n    this.setState({ notes: updatedNotes });\n  };\n\n  onType = (editMeId, updatedKey, updatedValue) => {\n    // editMeId==id of note that is edited\n    // updatedKey==title or description field\n    // updatedValue==value of title or description\n\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const textLowerCase = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!textLowerCase) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n\n        const titleMatch = title.includes(textLowerCase);\n        const descriptionMatch = description.includes(textLowerCase);\n\n        const searchMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = searchMatch;\n        return note;\n      }\n    });\n\n    this.setState({ notes: updatedNotes, searchText: textLowerCase });\n  };\n\n  componentDidUpdate() {\n    const savedNotesString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", savedNotesString);\n  }\n\n  componentDidMount() {\n    const savedNoteString = localStorage.getItem(\"savedNotes\");\n    if (savedNoteString) {\n      const savedNotes = JSON.parse(savedNoteString);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          onSearch={this.onSearch}\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n        />\n        <NotesList\n          removeNote={this.removeNote}\n          onType={this.onType}\n          notes={this.state.notes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}